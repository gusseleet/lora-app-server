// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transmittedData.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ListTransmittedDataRequest struct {
	// Max number of transmitted data to return in the result-set.
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	// ID of the application to filter on.
	ApplicationID int64 `protobuf:"varint,3,opt,name=applicationID" json:"applicationID,omitempty"`
	// Start date to filter on.
	StartDate string `protobuf:"bytes,4,opt,name=startDate" json:"startDate,omitempty"`
	// End date to filter on.
	EndDate string `protobuf:"bytes,5,opt,name=endDate" json:"endDate,omitempty"`
	// Filter on Rx or Tx, where Rx = 2 and Tx = 1
	TransmittedType int32 `protobuf:"varint,6,opt,name=transmittedType" json:"transmittedType,omitempty"`
}

func (m *ListTransmittedDataRequest) Reset()                    { *m = ListTransmittedDataRequest{} }
func (m *ListTransmittedDataRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTransmittedDataRequest) ProtoMessage()               {}
func (*ListTransmittedDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *ListTransmittedDataRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTransmittedDataRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListTransmittedDataRequest) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *ListTransmittedDataRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *ListTransmittedDataRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *ListTransmittedDataRequest) GetTransmittedType() int32 {
	if m != nil {
		return m.TransmittedType
	}
	return 0
}

type ListTransmittedDataResponse struct {
	TotalCount int32                         `protobuf:"varint,1,opt,name=totalCount" json:"totalCount,omitempty"`
	Result     []*GetTransmittedDataResponse `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListTransmittedDataResponse) Reset()                    { *m = ListTransmittedDataResponse{} }
func (m *ListTransmittedDataResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTransmittedDataResponse) ProtoMessage()               {}
func (*ListTransmittedDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *ListTransmittedDataResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListTransmittedDataResponse) GetResult() []*GetTransmittedDataResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetTransmittedDataResponse struct {
	// ID of the application
	ApplicationID int64 `protobuf:"varint,1,opt,name=applicationID" json:"applicationID,omitempty"`
	// Size of data
	Data int32 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	// Time of transmittion
	Date string `protobuf:"bytes,3,opt,name=date" json:"date,omitempty"`
	// Type of transmittion
	Type string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
}

func (m *GetTransmittedDataResponse) Reset()                    { *m = GetTransmittedDataResponse{} }
func (m *GetTransmittedDataResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTransmittedDataResponse) ProtoMessage()               {}
func (*GetTransmittedDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *GetTransmittedDataResponse) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *GetTransmittedDataResponse) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

func (m *GetTransmittedDataResponse) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *GetTransmittedDataResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*ListTransmittedDataRequest)(nil), "api.ListTransmittedDataRequest")
	proto.RegisterType((*ListTransmittedDataResponse)(nil), "api.ListTransmittedDataResponse")
	proto.RegisterType((*GetTransmittedDataResponse)(nil), "api.GetTransmittedDataResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TransmittedData service

type TransmittedDataClient interface {
	// Get transmitted data list.
	List(ctx context.Context, in *ListTransmittedDataRequest, opts ...grpc.CallOption) (*ListTransmittedDataResponse, error)
}

type transmittedDataClient struct {
	cc *grpc.ClientConn
}

func NewTransmittedDataClient(cc *grpc.ClientConn) TransmittedDataClient {
	return &transmittedDataClient{cc}
}

func (c *transmittedDataClient) List(ctx context.Context, in *ListTransmittedDataRequest, opts ...grpc.CallOption) (*ListTransmittedDataResponse, error) {
	out := new(ListTransmittedDataResponse)
	err := grpc.Invoke(ctx, "/api.TransmittedData/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TransmittedData service

type TransmittedDataServer interface {
	// Get transmitted data list.
	List(context.Context, *ListTransmittedDataRequest) (*ListTransmittedDataResponse, error)
}

func RegisterTransmittedDataServer(s *grpc.Server, srv TransmittedDataServer) {
	s.RegisterService(&_TransmittedData_serviceDesc, srv)
}

func _TransmittedData_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTransmittedDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransmittedDataServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TransmittedData/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransmittedDataServer).List(ctx, req.(*ListTransmittedDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransmittedData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.TransmittedData",
	HandlerType: (*TransmittedDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _TransmittedData_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transmittedData.proto",
}

func init() { proto.RegisterFile("transmittedData.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0x49, 0xd3, 0xe6, 0x4f, 0xe7, 0x8f, 0x14, 0x96, 0x5a, 0x42, 0x2c, 0x1a, 0x82, 0x87,
	0x9c, 0x5a, 0xa8, 0x07, 0x1f, 0xc0, 0x82, 0x08, 0x9e, 0x42, 0x5f, 0x60, 0xb4, 0xd3, 0xb2, 0x90,
	0xee, 0xae, 0xd9, 0xa9, 0xa0, 0x07, 0x0f, 0xbe, 0x82, 0x6f, 0xa6, 0xaf, 0xe0, 0x83, 0x48, 0x36,
	0x29, 0xb6, 0xb1, 0xb9, 0xed, 0xfc, 0xe6, 0x63, 0x26, 0xdf, 0x97, 0x81, 0x53, 0x2e, 0x50, 0xd9,
	0x8d, 0x64, 0xa6, 0xe5, 0x1c, 0x19, 0x27, 0xa6, 0xd0, 0xac, 0x85, 0x8f, 0x46, 0x46, 0xe3, 0xb5,
	0xd6, 0xeb, 0x9c, 0xa6, 0x68, 0xe4, 0x14, 0x95, 0xd2, 0x8c, 0x2c, 0xb5, 0xb2, 0x95, 0x24, 0xf9,
	0xf4, 0x20, 0xba, 0x97, 0x96, 0x17, 0x87, 0x03, 0x32, 0x7a, 0xda, 0x92, 0x65, 0x31, 0x84, 0x5e,
	0x2e, 0x37, 0x92, 0x43, 0x2f, 0xf6, 0xd2, 0x5e, 0x56, 0x15, 0x62, 0x04, 0x81, 0x5e, 0xad, 0x2c,
	0x71, 0xd8, 0x71, 0xb8, 0xae, 0xc4, 0x25, 0x9c, 0xa0, 0x31, 0xb9, 0x7c, 0x74, 0x2b, 0xee, 0xe6,
	0xa1, 0x1f, 0x7b, 0xa9, 0x9f, 0x1d, 0x42, 0x31, 0x86, 0xbe, 0x65, 0x2c, 0x78, 0x8e, 0x4c, 0x61,
	0x37, 0xf6, 0xd2, 0x7e, 0xf6, 0x0b, 0x44, 0x08, 0xff, 0x48, 0x2d, 0x5d, 0xaf, 0xe7, 0x7a, 0xbb,
	0x52, 0xa4, 0x30, 0xd8, 0xb3, 0xb9, 0x78, 0x31, 0x14, 0x06, 0x6e, 0x7d, 0x13, 0x27, 0xcf, 0x70,
	0x76, 0xd4, 0x93, 0x35, 0x5a, 0x59, 0x12, 0xe7, 0x00, 0xac, 0x19, 0xf3, 0x1b, 0xbd, 0x55, 0x3b,
	0x67, 0x7b, 0x44, 0x5c, 0x43, 0x50, 0x90, 0xdd, 0xe6, 0xa5, 0x3d, 0x3f, 0xfd, 0x3f, 0xbb, 0x98,
	0xa0, 0x91, 0x93, 0x5b, 0x6a, 0x1b, 0x98, 0xd5, 0xf2, 0xe4, 0x0d, 0xa2, 0x76, 0xd5, 0xdf, 0x74,
	0xbc, 0x63, 0xe9, 0x08, 0xe8, 0x2e, 0x91, 0xb1, 0x4e, 0xd6, 0xbd, 0x6b, 0x46, 0x2e, 0xce, 0xbe,
	0x63, 0x54, 0x32, 0x2e, 0x23, 0xa8, 0x02, 0x74, 0xef, 0xd9, 0x2b, 0x0c, 0x1a, 0xcb, 0xc5, 0x1a,
	0xba, 0x65, 0x14, 0xa2, 0xf2, 0xd0, 0xfe, 0xa7, 0xa3, 0xb8, 0x5d, 0x50, 0x7d, 0x7f, 0x32, 0x7e,
	0xff, 0xfa, 0xfe, 0xe8, 0x8c, 0xc4, 0xd0, 0x9d, 0x52, 0xe3, 0xe2, 0x1e, 0x02, 0x77, 0x4f, 0x57,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x5a, 0x1d, 0x95, 0x8b, 0x02, 0x00, 0x00,
}
