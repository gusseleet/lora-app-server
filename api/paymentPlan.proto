syntax = "proto3";

package api;

// for grpc-gateway
import "google/api/annotations.proto";

// PaymentPlan is the service managing the payment plan access
service PaymentPlan {
    // Get payment plan list.
    rpc List(ListPaymentPlansRequest) returns (ListPaymentPlansResponse) {
        option(google.api.http) = {
            get: "/api/paymentplans"
        };
    }

    // Get data for a particular payment plan.
    rpc Get(PaymentPlanRequest) returns (GetPaymentPlanResponse) {
        option(google.api.http) = {
            get: "/api/paymentplans/{id}"
        };
    }

    // Create a new payment plan.
    rpc Create(CreatePaymentPlanRequest) returns (CreatePaymentPlanResponse) {
        option(google.api.http) = {
            post: "/api/paymentplans"
            body: "*"
        };
    }

    // Update an existing payment plan.
    rpc Update(UpdatePaymentPlanRequest) returns (PaymentPlanEmptyResponse) {
        option(google.api.http) = {
            put: "/api/paymentplans/{id}"
            body: "*"
        };
    }

    // Delete a payment plan.
    rpc Delete(PaymentPlanRequest) returns (PaymentPlanEmptyResponse) {
        option(google.api.http) = {
            delete: "/api/paymentplans/{id}"
        };
    }

    rpc ListGatewayNetworks(ListPayPlanGatewayNetworksRequest) returns (ListPayPlanGatewayNetworkResponse) {
        option(google.api.http) = {
            get: "/api/paymentplans/{id}/gatewaynetworks"
        };
    }

    rpc GetGatewayNetwork(PayPlanGatewayNetworkRequest) returns (GetPayPlanGatewayNetworkResponse) {
        option(google.api.http) = {
            get: "/api/paymentplans/{id}/gatewaynetworks/{gatewayNetworkID}"
        };
    }

    rpc AddGatewayNetwork(PayPlanGatewayNetworkRequest) returns (PaymentPlanEmptyResponse) {
        option(google.api.http) = {
            post: "/api/paymentplans/{id}/gatewaynetworks"
            body: "*"
        };
    }

    rpc DeleteGatewayNetwork(PayPlanGatewayNetworkRequest) returns (PaymentPlanEmptyResponse) {
        option(google.api.http) = {
            delete: "/api/paymentplans/{id}/gatewaynetworks/{gatewayNetworkID}"
        };
    }
}

// Request the payment plans defined in the system.
message ListPaymentPlansRequest {
    // Max number of payment plans to return in the result-set.
    int32 limit = 1;

    // Offset in the result-set (for pagination).
    int32 offset = 2;

    // When provided, the given string will be used to search on
    // Name.
    string search = 3;
}

// Response of listing the payment plans
message ListPaymentPlansResponse {
    // Number of results
    int32 totalCount = 1;

    // List of payment plans
    repeated GetPaymentPlanResponse result = 2;
}

// Request the payment plan information.
message PaymentPlanRequest {
    // Id of the payment plan.
    int64 id = 1;
}

// The response of a payment plan.
message GetPaymentPlanResponse {
    // ID of the payment plan.
    int64 id = 1;

    // The name of the payment plan.
    string name = 2;

    // The data limit of the payment plan.
    int32 dataLimit = 3;

    // The number of allowed devices of the payment plan.
    int32 allowedDevices = 4;

    // The number of allowed applications of the payment plan.
    int32 allowedApplications = 5;

    // The fixed price of the payment plan.
    int32 fixedPrice = 6;

    // The price of data that exceeds the data limit.
    int32 addedDataPrice = 7;
}

// Add a new payment plan.
message CreatePaymentPlanRequest {
    // The payment plan name.
    string name = 1;

    // The data limit of the payment plan.
    int32 dataLimit = 2;

    // The number of allowed devices of the payment plan.
    int32 allowedDevices = 4;

    // The number of allowed applications of the payment plan.
    int32 allowedApplications = 5;

    // The fixed price of the payment plan.
    int32 fixedPrice = 6;

    // The price of data that exceeds the data limit.
    int32 addedDataPrice = 7;
}

// The response of the created payment plan.
message CreatePaymentPlanResponse {
    // The ID of the created payment plan.
    int64 id = 1;
}

// Update existing payment plan.
message UpdatePaymentPlanRequest {
    // ID of the payment plan to be updated.
    int64 id = 1;

    // The new name.
    string name = 2;

    // The data limit of the payment plan.
    int32 dataLimit = 3;

    // The number of allowed devices of the payment plan.
    int32 allowedDevices = 4;

    // The number of allowed applications of the payment plan.
    int32 allowedApplications = 5;

    // The fixed price of the payment plan.
    int32 fixedPrice = 6;

    // The price of data that exceeds the data limit.
    int32 addedDataPrice = 7;
}

// Empty responses for update and delete
message PaymentPlanEmptyResponse {
    // Nothing to return on update and delete
}

// Requests the gateway networks of a given payment plan
message ListPayPlanGatewayNetworksRequest {
    // The payment plan id.
    int64 id = 1;

    // Max number of gateways to return in the result-set.
    int32 limit = 2;

    // Offset in the result-set (for pagination).
    int32 offset = 3;
}

// Response for the gateway networks of a payment plan
message ListPayPlanGatewayNetworkResponse {
    // The total number of gateway networks of the payment plan.
    int32 totalCount = 1;

    // The gateway networks in the requested limit, offset range.
    repeated GetPayPlanGatewayNetworkResponse result = 2;
}


// Response for a specific gateway network of a payment plan
message GetPayPlanGatewayNetworkResponse {
    // ID of the Gateway Network.
    int64 id = 1;

    // When the gateway network was created.
    string createdAt = 2;

    // When the gateway network was last updated.
    string updatedAt = 3;

    // Gateway Network name.
    string name = 4;

    // Price of the gateway network.
    string desc = 5;

    // Is the network private or not.
    bool privateNetwork = 6;

    // Organization the gateway network belongs to.
    int64 organizationID = 7;
}

// Request to get a specific gateway network of a specific payment plan
message PayPlanGatewayNetworkRequest {
    // The payment plan id.
    int64 id = 1;

    // The gateway network id.
    int64 gatewayNetworkID = 2;
}

